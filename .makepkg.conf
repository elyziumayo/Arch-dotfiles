# === Compiler Flags (Clang + full LTO + native optimizations) ===
CFLAGS="-march=native -mtune=native -O3 -pipe -fno-plt -fexceptions \
        -Wp,-D_FORTIFY_SOURCE=3 -Wformat -Werror=format-security \
        -fstack-clash-protection -fcf-protection -flto"

CXXFLAGS="$CFLAGS -Wp,-D_GLIBCXX_ASSERTIONS"

# === Use Clang + LLVM Toolchain ===
export CC=clang
export CXX=clang++
export LD=clang
export AR=llvm-ar
export NM=llvm-nm
export RANLIB=llvm-ranlib
export STRIP=llvm-strip

# === Linker Flags: Use mold with full LTO and security ===
LDFLAGS="-fuse-ld=mold -flto -Wl,-O2,--sort-common,--as-needed,-z,relro,-z,now"

# === Parallel Builds: Use all logical cores ===
MAKEFLAGS="-j$(nproc) -l$(nproc)"

# === Rust Compilation: Full LTO and mold ===
RUSTFLAGS="-C opt-level=3 -C lto=fat -C target-cpu=native -C linker=mold \
           -C link-arg=-Wl,-z,pack-relative-relocs"

# === Pacman Packaging: Stripped, optimized, and compressed ===
PKGEXT='.pkg.tar.zst'
OPTIONS=(strip !docs !debug)
